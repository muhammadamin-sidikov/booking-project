openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/booking/:
    get:
      operationId: booking_list
      tags:
      - booking
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookingList'
          description: ''
    post:
      operationId: booking_create
      tags:
      - booking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /api/booking/{id}/:
    get:
      operationId: booking_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - booking
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingList'
          description: ''
    put:
      operationId: booking_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - booking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BookingList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BookingList'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingList'
          description: ''
    patch:
      operationId: booking_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - booking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBookingList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBookingList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBookingList'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingList'
          description: ''
    delete:
      operationId: booking_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - booking
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/fields/:
    get:
      operationId: fields_list
      tags:
      - fields
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Field'
          description: ''
    post:
      operationId: fields_create
      tags:
      - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Field'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Field'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
          description: ''
  /api/fields/{id}/:
    get:
      operationId: fields_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this field.
        required: true
      tags:
      - fields
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
          description: ''
    put:
      operationId: fields_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this field.
        required: true
      tags:
      - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Field'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Field'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
          description: ''
    patch:
      operationId: fields_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this field.
        required: true
      tags:
      - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedField'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
          description: ''
    delete:
      operationId: fields_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this field.
        required: true
      tags:
      - fields
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/games/:
    get:
      operationId: games_list
      tags:
      - games
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameList'
          description: ''
    post:
      operationId: games_create
      tags:
      - games
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Game'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Game'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
  /api/games/{id}/:
    get:
      operationId: games_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this game.
        required: true
      tags:
      - games
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameList'
          description: ''
    put:
      operationId: games_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this game.
        required: true
      tags:
      - games
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GameList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GameList'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameList'
          description: ''
    patch:
      operationId: games_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this game.
        required: true
      tags:
      - games
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGameList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGameList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGameList'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameList'
          description: ''
    delete:
      operationId: games_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this game.
        required: true
      tags:
      - games
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/jwt/create/:
    post:
      operationId: jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - jwt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/jwt/refresh/:
    post:
      operationId: jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - jwt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/users/login/:
    get:
      operationId: users_login_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
    post:
      operationId: users_login_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/test-email/:
    post:
      operationId: users_test_email_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailVerification'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerification'
          description: ''
  /api/users/verify-email/:
    post:
      operationId: users_verify_email_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyCode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyCode'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCode'
          description: ''
components:
  schemas:
    Booking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        soni:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
        user:
          type: integer
        sana:
          type: integer
      required:
      - id
      - sana
      - soni
      - user
    BookingList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        sana:
          type: string
          readOnly: true
        soni:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
      required:
      - id
      - sana
      - soni
      - user
    EmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Field:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        joy_soni:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        joylashuv:
          type: string
          maxLength: 255
        narx:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        rasm:
          type: string
          format: uri
          nullable: true
      required:
      - id
      - joy_soni
      - joylashuv
      - name
      - narx
    Game:
      type: object
      properties:
        maydon:
          type: integer
        sana:
          type: string
          format: date-time
      required:
      - maydon
      - sana
    GameList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        maydon:
          type: string
          readOnly: true
        sana:
          type: string
          format: date-time
        qolgan_joy:
          type: integer
          readOnly: true
      required:
      - id
      - maydon
      - qolgan_joy
      - sana
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    PatchedBookingList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        sana:
          type: string
          readOnly: true
        soni:
          type: integer
          maximum: 9223372036854775807
          minimum: 1
          format: int64
    PatchedField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        joy_soni:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        joylashuv:
          type: string
          maxLength: 255
        narx:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        rasm:
          type: string
          format: uri
          nullable: true
    PatchedGameList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        maydon:
          type: string
          readOnly: true
        sana:
          type: string
          format: date-time
        qolgan_joy:
          type: integer
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - email
      - id
      - name
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        name:
          type: string
          maxLength: 100
        password:
          type: string
          writeOnly: true
          maxLength: 128
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - name
      - password
      - password2
    VerifyCode:
      type: object
      properties:
        email:
          type: string
          format: email
        code:
          type: string
          maxLength: 6
      required:
      - code
      - email
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
